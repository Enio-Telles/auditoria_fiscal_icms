version: '3.8'

services:
  # Banco de Dados Principal - PostgreSQL
  postgresql:
    image: postgres:15
    container_name: auditoria_postgresql
    environment:
      POSTGRES_DB: auditoria_fiscal
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    networks:
      - auditoria_network

  # Base de Conhecimento Grafo - Neo4j
  neo4j:
    image: neo4j:5.15
    container_name: auditoria_neo4j
    environment:
      NEO4J_AUTH: neo4j/auditoria123
      NEO4J_PLUGINS: '["apoc", "graph-data-science"]'
      NEO4J_dbms_security_procedures_unrestricted: "apoc.*,gds.*"
    ports:
      - "7474:7474"  # Browser
      - "7687:7687"  # Bolt
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    networks:
      - auditoria_network

  # LLM Local - Ollama
  ollama:
    image: ollama/ollama:latest
    container_name: auditoria_ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - auditoria_network
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  # Redis para Cache e Filas
  redis:
    image: redis:7-alpine
    container_name: auditoria_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - auditoria_network

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: auditoria_backend
    environment:
      - DATABASE_URL=postgresql://postgres:postgres123@postgresql:5432/auditoria_fiscal
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=auditoria123
      - OLLAMA_BASE_URL=http://ollama:11434
      - REDIS_URL=redis://redis:6379
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./configs:/app/configs
    depends_on:
      - postgresql
      - neo4j
      - ollama
      - redis
    networks:
      - auditoria_network

  # Frontend React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: auditoria_frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    depends_on:
      - backend
    networks:
      - auditoria_network

  # Serviço de Preparação dos Modelos
  model_setup:
    image: ollama/ollama:latest
    container_name: auditoria_model_setup
    volumes:
      - ollama_data:/root/.ollama
    command: >
      sh -c "
        ollama pull llama3.1:8b &&
        ollama pull llama3.1:70b &&
        ollama pull nomic-embed-text &&
        echo 'Modelos baixados com sucesso!'
      "
    depends_on:
      - ollama
    networks:
      - auditoria_network

  # Sistema de Análise de Estoques (Preparação para integração futura)
  stock_analysis_adapter:
    build:
      context: .
      dockerfile: Dockerfile.stock_adapter
    container_name: auditoria_stock_adapter
    environment:
      - ADAPTER_ENABLED=false
      - DATABASE_URL=postgresql://postgres:postgres123@postgresql:5432/auditoria_fiscal
    ports:
      - "8001:8001"
    volumes:
      - ./data/integrations:/app/integrations
    depends_on:
      - postgresql
    networks:
      - auditoria_network
    profiles:
      - "future-integrations"  # Só será iniciado quando explicitamente solicitado

volumes:
  postgres_data:
  neo4j_data:
  neo4j_logs:
  ollama_data:
  redis_data:

networks:
  auditoria_network:
    driver: bridge
